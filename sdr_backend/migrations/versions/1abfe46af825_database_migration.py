"""database migration

Revision ID: 1abfe46af825
Revises: 327d6229e2cf
Create Date: 2025-07-05 17:55:22.309883

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1abfe46af825'
down_revision: Union[str, None] = '327d6229e2cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('diagrams',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=False),
    sa.Column('d2_dsl', sa.Text(), nullable=False),
    sa.Column('rendered_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('pinned_nodes', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diagrams_id'), 'diagrams', ['id'], unique=False)
    op.create_index(op.f('ix_diagrams_project_id'), 'diagrams', ['project_id'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('project_id', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('payload_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_read', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_id'), 'notifications', ['id'], unique=False)
    op.create_index(op.f('ix_notifications_project_id'), 'notifications', ['project_id'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('organizations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('owner_user_id', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_table('threats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_code', sa.String(), nullable=False),
    sa.Column('diagram_version', sa.Integer(), nullable=False),
    sa.Column('node_id', sa.String(), nullable=True),
    sa.Column('stride_category', sa.String(), nullable=False),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('mitigation', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_threats_id'), 'threats', ['id'], unique=False)
    op.create_index(op.f('ix_threats_project_code'), 'threats', ['project_code'], unique=False)
    op.create_table('diagram_edges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('diagram_id', sa.Integer(), nullable=False),
    sa.Column('edge_uid', sa.String(), nullable=False),
    sa.Column('source_uid', sa.String(), nullable=False),
    sa.Column('target_uid', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['diagram_id'], ['diagrams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diagram_edges_id'), 'diagram_edges', ['id'], unique=False)
    op.create_table('diagram_nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('diagram_id', sa.Integer(), nullable=False),
    sa.Column('node_uid', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('layer', sa.String(), nullable=True),
    sa.Column('trust_zone', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['diagram_id'], ['diagrams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diagram_nodes_id'), 'diagram_nodes', ['id'], unique=False)
    op.create_table('diagram_versions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('diagram_id', sa.Integer(), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('d2_dsl', sa.Text(), nullable=False),
    sa.Column('rendered_json', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('pinned_nodes', sa.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['diagram_id'], ['diagrams.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diagram_versions_id'), 'diagram_versions', ['id'], unique=False)
    op.create_table('organization_members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_members_id'), 'organization_members', ['id'], unique=False)
    op.create_index(op.f('ix_organization_members_user_id'), 'organization_members', ['user_id'], unique=False)
    op.alter_column('reports', 'generated_by',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('reports', 'diagram_url',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('reports', 'diagram_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    op.alter_column('templates', 'template_id',
               existing_type=sa.String(length=5),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('templates', 'tenant_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('templates', 'template_name',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('templates', 'template_tags',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=postgresql.ARRAY(sa.String()),
               existing_nullable=False)
    op.alter_column('templates', 'template_visibility',
               existing_type=postgresql.ARRAY(sa.TEXT()),
               type_=postgresql.ARRAY(sa.String()),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('templates', 'template_visibility',
               existing_type=postgresql.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=False)
    op.alter_column('templates', 'template_tags',
               existing_type=postgresql.ARRAY(sa.String()),
               type_=postgresql.ARRAY(sa.TEXT()),
               existing_nullable=False)
    op.alter_column('templates', 'template_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('templates', 'tenant_name',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('templates', 'template_id',
               existing_type=sa.String(length=5),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('reports', 'diagram_hash',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('reports', 'diagram_url',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('reports', 'generated_by',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_index(op.f('ix_organization_members_user_id'), table_name='organization_members')
    op.drop_index(op.f('ix_organization_members_id'), table_name='organization_members')
    op.drop_table('organization_members')
    op.drop_index(op.f('ix_diagram_versions_id'), table_name='diagram_versions')
    op.drop_table('diagram_versions')
    op.drop_index(op.f('ix_diagram_nodes_id'), table_name='diagram_nodes')
    op.drop_table('diagram_nodes')
    op.drop_index(op.f('ix_diagram_edges_id'), table_name='diagram_edges')
    op.drop_table('diagram_edges')
    op.drop_index(op.f('ix_threats_project_code'), table_name='threats')
    op.drop_index(op.f('ix_threats_id'), table_name='threats')
    op.drop_table('threats')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_table('organizations')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_project_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_id'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_diagrams_project_id'), table_name='diagrams')
    op.drop_index(op.f('ix_diagrams_id'), table_name='diagrams')
    op.drop_table('diagrams')
    # ### end Alembic commands ###
