"""JSON data type

Revision ID: 52dce25915cf
Revises: eb63eca11574
Create Date: 2025-03-09 16:10:41.273861

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '52dce25915cf'
down_revision: Union[str, None] = 'eb63eca11574'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(
        "ALTER TABLE projects ALTER COLUMN conversation_history TYPE JSONB[] "
        "USING CASE WHEN conversation_history IS NULL THEN '{}'::jsonb[] "
        "ELSE ARRAY[conversation_history]::jsonb[] END"
    )
    
    op.execute(
        "ALTER TABLE projects ALTER COLUMN diagram_state TYPE JSONB "
        "USING CASE WHEN diagram_state IS NULL THEN '{}'::jsonb "
        "ELSE diagram_state::jsonb END"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('projects', 'diagram_state',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    op.alter_column('projects', 'conversation_history',
               existing_type=postgresql.ARRAY(postgresql.JSONB(astext_type=sa.Text())),
               type_=postgresql.JSON(astext_type=sa.Text()),
               existing_nullable=True)
    # ### end Alembic commands ###
