"""update Role based table project code

Revision ID: c460210ff8cf
Revises: bf526dff7ec1
Create Date: 2025-04-15 20:10:59.027432

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c460210ff8cf'
down_revision: Union[str, None] = 'bf526dff7ec1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('roles', sa.Column('project_code', sa.String(), nullable=False))
    op.alter_column('roles', 'user_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('roles', 'tenant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('roles_project_id_fkey', 'roles', type_='foreignkey')
    op.create_foreign_key(None, 'roles', 'projects', ['project_code'], ['project_code'])
    op.drop_column('roles', 'project_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('roles', sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'roles', type_='foreignkey')
    op.create_foreign_key('roles_project_id_fkey', 'roles', 'projects', ['project_id'], ['id'])
    op.alter_column('roles', 'tenant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('roles', 'user_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('roles', 'project_code')
    # ### end Alembic commands ###
