"""Updated ENUMs

Revision ID: eb63eca11574
Revises: fc32aaae00a9
Create Date: 2025-03-09 15:07:35.615042

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'eb63eca11574'
down_revision: Union[str, None] = 'fc32aaae00a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # sa.Enum('ACTIVE', 'PENDING', 'COMPLETED', 'ON_HOLD', 'IN_PROGRESS', 'STARTED', 'NOT_STARTED', 'ALL', name='projectstatus').create(op.get_bind())
    # sa.Enum('ALL', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='projectpriority').create(op.get_bind())

    op.alter_column('projects', 'user_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # Use SQL with explicit type casting for enum columns
    op.execute("ALTER TABLE projects ALTER COLUMN status TYPE projectstatus USING status::text::projectstatus")
    op.execute("ALTER TABLE projects ALTER COLUMN priority TYPE projectpriority USING priority::text::projectpriority")
    # op.alter_column('projects', 'status',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Enum('ACTIVE', 'PENDING', 'COMPLETED', 'ON_HOLD', 'IN_PROGRESS', 'STARTED', 'NOT_STARTED', 'ALL', name='projectstatus'),
    #            existing_nullable=False)
    # op.alter_column('projects', 'priority',
    #            existing_type=sa.VARCHAR(),
    #            type_=sa.Enum('ALL', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='projectpriority'),
    #            existing_nullable=True)
    op.alter_column('projects', 'created_date',
               existing_type=sa.DATE(),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'creator',
               existing_type=sa.VARCHAR(),
               nullable=False)
    
    op.execute("ALTER TABLE user_tenant_association ALTER COLUMN id DROP IDENTITY IF EXISTS")
    op.alter_column('user_tenant_association', 'id',
               existing_type=sa.INTEGER(),
               server_default=None,
               existing_nullable=False,
               autoincrement=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('user_tenant_association', 'id',
               existing_type=sa.INTEGER(),
               server_default=sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('roles', 'tenant_id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.alter_column('roles', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.alter_column('projects', 'creator',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('projects', 'created_date',
               existing_type=sa.DATE(),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('projects', 'priority',
               existing_type=sa.Enum('ALL', 'LOW', 'MEDIUM', 'HIGH', 'CRITICAL', name='projectpriority'),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.alter_column('projects', 'status',
               existing_type=sa.Enum('ACTIVE', 'PENDING', 'COMPLETED', 'ON_HOLD', 'IN_PROGRESS', 'STARTED', 'NOT_STARTED', 'ALL', name='projectstatus'),
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('projects', 'user_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###
