.react-flow__edge-path {
    stroke: #a1a1aa; /* Default subtle grey */
    stroke-width: 2.5px !important; /* Visible stroke width */
    transition: stroke 0.2s ease-out, stroke-width 0.2s ease-out;
    pointer-events: none; /* Disable direct pointer events on the visible path */
  }
  .react-flow__edges {
    pointer-events: all !important;
  }

/* Add animation for the threat panel */
@keyframes slideIn {
  from {
    transform: translateX(-10px);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}

/* Minimap toggle button styles */
.minimap-toggle-button {
  border-radius: 50%;
  background: white;
  width: 30px;
  height: 30px;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  border: 1px solid rgba(124, 101, 246, 0.3);
  transition: all 0.2s ease;
  cursor: pointer;
  z-index: 10;
}

.minimap-toggle-button:hover {
  transform: scale(1.1);
  box-shadow: 0 3px 8px rgba(124, 101, 246, 0.2);
  border-color: rgba(124, 101, 246, 0.5);
}

.minimap-toggle-button svg {
  color: rgba(124, 101, 246, 0.8);
  width: 16px;
  height: 16px;
}

.minimap-toggle-button:active {
  transform: scale(0.95);
}

/* Minimap styles */
.react-flow__minimap {
  transition: all 0.3s ease;
}

.react-flow__minimap:hover {
  transform: scale(1.05);
  box-shadow: 0 4px 12px rgba(124, 101, 246, 0.15);
  border-color: rgba(124, 101, 246, 0.5) !important;
}

.threat-panel-transition {
  animation: slideIn 0.3s ease-out;
}

/* Add hover effect for threat cards */
.threat-card-hover-effect:hover {
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  transform: translateY(-1px);
  transition: all 0.2s;
}

/* Add pulsing effect for high threats */
@keyframes pulse {
  0% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0.7);
  }
  
  70% {
    transform: scale(1);
    box-shadow: 0 0 0 10px rgba(239, 68, 68, 0);
  }
  
  100% {
    transform: scale(0.95);
    box-shadow: 0 0 0 0 rgba(239, 68, 68, 0);
  }
}

.threat-badge-pulse {
  animation: pulse 1.5s infinite;
}

/* Styles for threat badges */
.threat-badge {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 50%;
  font-size: 10px;
  font-weight: bold;
  color: white;
  width: 18px;
  height: 18px;
  z-index: 100;
  box-shadow: 0 0 0 1.5px white, 0 2px 4px rgba(0,0,0,0.3);
  margin-left: 3px;
  cursor: pointer;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  transform-origin: center;
}

.threat-badge:hover, .threat-badge:active {
  transform: scale(1.3);
  box-shadow: 0 0 0 1.5px white, 0 4px 8px rgba(0,0,0,0.4);
}

.threat-badge-high {
  background-color: #ef4444;
}

.threat-badge-high:hover, .threat-badge-high:active {
  background-color: #dc2626;
  box-shadow: 0 0 0 1.5px white, 0 0 10px rgba(239, 68, 68, 0.6);
}

.threat-badge-medium {
  background-color: #f59e0b;
}

.threat-badge-medium:hover, .threat-badge-medium:active {
  background-color: #d97706;
  box-shadow: 0 0 0 1.5px white, 0 0 10px rgba(245, 158, 11, 0.6);
}

.threat-badge-low {
  background-color: #3b82f6;
}

.threat-badge-low:hover, .threat-badge-low:active {
  background-color: #2563eb;
  box-shadow: 0 0 0 1.5px white, 0 0 10px rgba(59, 130, 246, 0.6);
}

/* Threat indicator positioning */
.threat-indicator {
  position: absolute;
  top: -6px;
  right: -6px;
  display: flex;
  flex-direction: row;
  gap: 3px;
  z-index: 9999 !important;
  pointer-events: auto;
}

/* Modern gradient background for diagram pane */
.diagram-background {
  background: linear-gradient(135deg, rgba(242, 244, 248, 0.8) 0%, rgba(230, 233, 240, 0.7) 50%, rgba(223, 227, 236, 0.6) 100%);
  backdrop-filter: blur(8px);
  position: absolute;
  inset: 0;
  z-index: -1;
}

/* Animated gradient pattern for diagram background */
.diagram-pattern {
  position: absolute;
  inset: 0;
  background-image: 
    radial-gradient(circle at 25% 25%, rgba(124, 101, 246, 0.05) 0%, transparent 50%),
    radial-gradient(circle at 75% 75%, rgba(124, 101, 246, 0.05) 0%, transparent 50%);
  opacity: 0.7;
  z-index: -1;
  animation: patternMove 20s ease-in-out infinite alternate;
}

@keyframes patternMove {
  0% {
    background-position: 0% 0%;
  }
  100% {
    background-position: 100% 100%;
  }
}

/* Animation for node floating */
@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0px);
  }
}

/* Animation for slower floating nodes */
@keyframes floatSlow {
  0% {
    transform: translateY(0px) scale(1);
  }
  50% {
    transform: translateY(-15px) scale(1.05);
  }
  100% {
    transform: translateY(0px) scale(1);
  }
}

/* Animation for delayed floating */
@keyframes floatDelay {
  0% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-8px) rotate(2deg);
  }
  100% {
    transform: translateY(0px) rotate(0deg);
  }
}

/* Connection path animation */
.connection-path {
  stroke-dasharray: 6, 4;
  animation: dashOffset 30s linear infinite;
}

@keyframes dashOffset {
  0% {
    stroke-dashoffset: 0;
  }
  100% {
    stroke-dashoffset: -500;
  }
}

/* Animated particle glow */
.particle1, .particle2, .particle3, .particle4, .particle5, .particle6, .particle7, .particle8, .particle9, .particle10, .particle11 {
  filter: drop-shadow(0 0 3px rgba(124, 101, 246, 0.8));
}

/* Apply animations to floating elements */
.animate-float {
  animation: float 4s ease-in-out infinite;
}

.animate-float-slow {
  animation: floatSlow 6s ease-in-out infinite;
}

.animate-float-delay {
  animation: floatDelay 5s ease-in-out infinite;
  animation-delay: 1s;
}

/* Update animation for placeholder nodes - gentle movement near original position */
@keyframes floatNode {
  0% {
    transform: translate(0, 0) scale(1);
  }
  20% {
    transform: translate(20px, -15px) scale(0.98);
  }
  40% {
    transform: translate(35px, 0px) scale(0.97);
  }
  60% {
    transform: translate(20px, 15px) scale(0.98);
  }
  80% {
    transform: translate(-15px, 10px) scale(0.97);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}

/* Create variations of the float animation for different nodes */
@keyframes floatNodeAlt1 {
  0% {
    transform: translate(0, 0) scale(1);
  }
  25% {
    transform: translate(-25px, 15px) scale(0.98);
  }
  50% {
    transform: translate(-15px, 30px) scale(0.97);
  }
  75% {
    transform: translate(15px, 15px) scale(0.98);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}

@keyframes floatNodeAlt2 {
  0% {
    transform: translate(0, 0) scale(1);
  }
  33% {
    transform: translate(30px, -20px) scale(0.98);
  }
  66% {
    transform: translate(-20px, -15px) scale(0.98);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}

/* Create a diagonal movement pattern */
@keyframes floatNodeAlt3 {
  0% {
    transform: translate(0, 0) scale(1);
  }
  20% {
    transform: translate(-25px, -20px) scale(0.97);
  }
  40% {
    transform: translate(-15px, -10px) scale(0.98);
  }
  60% {
    transform: translate(10px, 10px) scale(0.99);
  }
  80% {
    transform: translate(25px, 20px) scale(0.98);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}

/* Create a horizontal-dominant movement pattern */
@keyframes floatNodeAlt4 {
  0% {
    transform: translate(0, 0) scale(1);
  }
  30% {
    transform: translate(30px, -10px) scale(0.97);
  }
  70% {
    transform: translate(-30px, 10px) scale(0.97);
  }
  100% {
    transform: translate(0, 0) scale(1);
  }
}

/* Apply base animation to all placeholder nodes but reduce the duration */
.placeholder-node {
  filter: drop-shadow(0 6px 10px rgba(0, 0, 0, 0.1));
  animation: floatNode 30s ease-in-out infinite;
  transition: all 0.3s ease;
  position: relative;
  z-index: 1;
}

/* Apply different animation variations with reduced durations */
.placeholder-node:nth-child(2n) {
  animation-name: floatNodeAlt1;
  animation-duration: 32s;
  z-index: 2;
}

.placeholder-node:nth-child(3n) {
  animation-name: floatNodeAlt2;
  animation-duration: 34s;
  z-index: 3;
}

.placeholder-node:nth-child(3n+1) {
  animation-name: floatNodeAlt3;
  animation-duration: 36s;
  z-index: 1;
}

.placeholder-node:nth-child(4n+2) {
  animation-name: floatNodeAlt4;
  animation-duration: 38s;
  z-index: 2;
}

/* Apply different delays to make the animation more natural */
.placeholder-node:nth-child(1) {
  animation-delay: 0s;
}

.placeholder-node:nth-child(2) {
  animation-delay: 3s;
}

.placeholder-node:nth-child(3) {
  animation-delay: 6s;
}

.placeholder-node:nth-child(4) {
  animation-delay: 9s;
}

.placeholder-node:nth-child(5) {
  animation-delay: 12s;
}

.placeholder-node:nth-child(6) {
  animation-delay: 15s;
}

.placeholder-node:nth-child(7) {
  animation-delay: 18s;
}

.placeholder-node:nth-child(8) {
  animation-delay: 21s;
}

.placeholder-node:hover {
  filter: drop-shadow(0 8px 15px rgba(0, 0, 0, 0.15));
  transform: translateY(-3px);
  animation-play-state: paused;
}

@keyframes fadeInNode {
  from {
    opacity: 0;
    transform: translateY(10px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes pulseConnection {
  0% {
    stroke-dashoffset: 24;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

.placeholder-connection {
  stroke-dasharray: 5, 5;
  animation: pulseConnection 1.5s linear infinite;
}

/* Fade-in animation for nodes */
.node-fade-in {
  animation: fadeInNode 0.5s ease-out forwards;
}

.node-fade-in:nth-child(2) {
  animation-delay: 0.1s;
}

.node-fade-in:nth-child(3) {
  animation-delay: 0.2s;
}

.node-fade-in:nth-child(4) {
  animation-delay: 0.3s;
}

.node-fade-in:nth-child(5) {
  animation-delay: 0.4s;
}

.node-fade-in:nth-child(6) {
  animation-delay: 0.5s;
}

/* Node label styles - enhance for better visibility and modern design */
.node-label {
  white-space: nowrap;
  font-size: 0.975rem !important;
  font-weight: 690 !important;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  color: rgba(23, 37, 84, 0.9);
  letter-spacing: -0.01em;
  text-shadow: 0 1px 1px rgba(255, 255, 255, 0.7);
  background: transparent;
  padding: 5px 12px;
  border-radius: 12px;
  z-index: 2;
  transition: all 0.2s ease;
  border: none;
  box-shadow: none;
}

/* Add hover effect to labels */
.node-label:hover {
  transform: translateY(-1px);
  box-shadow: none;
}

/* Enhanced tooltip styling */
.custom-node .react-tooltip {
  background-color: white !important;
  opacity: 1 !important;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15) !important;
  border-radius: 8px !important;
  border: 1px solid rgba(0,0,0,0.1) !important;
  padding: 8px 12px !important;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
  z-index: 1000 !important;
  max-width: 300px !important;
}

/* Improved tooltip styling */
.threat-tooltip {
  animation: tooltipFadeIn 0.2s ease-out;
}

@keyframes tooltipFadeIn {
  from { 
    opacity: 0;
    transform: translateY(-90%);
  }
  to {
    opacity: 1;
    transform: translateY(-100%);
  }
}

/* Force visible parent containers */
.react-flow__renderer, 
.react-flow__pane, 
.react-flow__container,
.react-flow__viewport,
.react-flow__nodes {
  overflow: visible !important;
}

/* Threat badge container positioning */
.threat-badge-container {
  pointer-events: none;
  position: absolute;
  top: 0;
  right: 0;
  width: 0;
  height: 0;
  overflow: visible;
  z-index: 9999;
}

/* Database node styling */
.database-node-container {
  --database-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
}

.database-node {
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
  filter: drop-shadow(var(--database-shadow));
}

.database-node img,
.database-node svg {
  filter: drop-shadow(var(--database-shadow));
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

/* Special styling for specific database types */
[data-nodetype="database_redis_cache"] .database-node img,
[data-nodetype="database_redis_cache"] .database-node svg {
  filter: drop-shadow(0px 1px 3px rgba(216, 44, 32, 0.3));
}

[data-nodetype="database_postgresql"] .database-node img,
[data-nodetype="database_postgresql"] .database-node svg {
  filter: drop-shadow(0px 1px 3px rgba(51, 103, 145, 0.3));
}

[data-nodetype="database_mongodb"] .database-node img,
[data-nodetype="database_mongodb"] .database-node svg {
  filter: drop-shadow(0px 1px 3px rgba(77, 179, 61, 0.3));
}

/* Override any shadow or background from ancestor elements for database nodes */
[data-is-database="true"] * {
  background-color: transparent !important;
}

/* Custom background clearing for database icons */
.database-icon {
  background: transparent !important;
  box-shadow: none !important;
}

/* Application node styling */
.application-node-container {
  --application-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
}

.application-node {
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
  filter: drop-shadow(var(--application-shadow));
}

.application-node img,
.application-node svg {
  filter: drop-shadow(var(--application-shadow));
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

/* Special styling for specific application types */
[data-nodetype="application_api_gateway"] .application-node img,
[data-nodetype="application_api_gateway"] .application-node svg {
  filter: drop-shadow(0px 1px 3px rgba(52, 168, 83, 0.3));
}

[data-nodetype="application_microservice"] .application-node img,
[data-nodetype="application_microservice"] .application-node svg,
[data-nodetype*="service"] .application-node img,
[data-nodetype*="service"] .application-node svg {
  filter: drop-shadow(0px 1px 3px rgba(52, 168, 83, 0.3));
}

[data-nodetype="application_web_server"] .application-node img,
[data-nodetype="application_web_server"] .application-node svg {
  filter: drop-shadow(0px 1px 3px rgba(52, 168, 83, 0.3));
}

/* Override any shadow or background from ancestor elements for application nodes */
[data-is-application="true"] * {
  background-color: transparent !important;
}

/* Custom background clearing for application icons */
.application-icon {
  background: transparent !important;
  box-shadow: none !important;
}

/* Network node styling */
.network-node-container {
  --network-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
}

.network-node {
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
  filter: drop-shadow(var(--network-shadow));
}

.network-node img,
.network-node svg {
  filter: drop-shadow(var(--network-shadow));
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

/* Special styling for specific network types */
[data-nodetype="network_firewall"] .network-node img,
[data-nodetype="network_firewall"] .network-node svg {
  filter: drop-shadow(0px 1px 3px rgba(220, 53, 69, 0.3));
}

[data-nodetype="network_router"] .network-node img,
[data-nodetype="network_router"] .network-node svg {
  filter: drop-shadow(0px 1px 3px rgba(220, 53, 69, 0.3));
}

[data-nodetype="network_load_balancer"] .network-node img,
[data-nodetype="network_load_balancer"] .network-node svg {
  filter: drop-shadow(0px 1px 3px rgba(220, 53, 69, 0.3));
}

/* Override any shadow or background from ancestor elements for network nodes */
[data-is-network="true"] * {
  background-color: transparent !important;
}

/* Custom background clearing for network icons */
.network-icon {
  background: transparent !important;
  box-shadow: none !important;
}

/* Update microservice styling to use black color */
[data-nodetype="application_microservice"] .application-node img,
[data-nodetype="application_microservice"] .application-node svg,
[data-nodetype*="microservice"] .application-node img,
[data-nodetype*="microservice"] .application-node svg {
  filter: drop-shadow(0px 1px 3px rgba(0, 0, 0, 0.4)) !important;
  color: #000000 !important;
}

/* Client node styling */
.client-node-container {
  --client-shadow: 0px 2px 12px rgba(0, 0, 0, 0.15);
}

.client-node {
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
  filter: drop-shadow(var(--client-shadow));
}

.client-node img,
.client-node svg {
  filter: drop-shadow(var(--client-shadow));
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}

/* Special styling for specific client types */
[data-nodetype="client_browser"] .client-node img,
[data-nodetype="client_browser"] .client-node svg {
  filter: drop-shadow(0px 2px 5px rgba(124, 101, 246, 0.4));
}

[data-nodetype="client_mobile"] .client-node img,
[data-nodetype="client_mobile"] .client-node svg {
  filter: drop-shadow(0px 2px 5px rgba(124, 101, 246, 0.4));
}

[data-nodetype="client_user"] .client-node img,
[data-nodetype="client_user"] .client-node svg,
[data-nodetype*="user"] .client-node img,
[data-nodetype*="user"] .client-node svg {
  filter: drop-shadow(0px 2px 5px rgba(124, 101, 246, 0.4));
}

[data-nodetype="client_device"] .client-node img,
[data-nodetype="client_device"] .client-node svg {
  filter: drop-shadow(0px 2px 5px rgba(124, 101, 246, 0.4));
}

/* Override any shadow or background from ancestor elements for client nodes */
[data-is-client="true"] * {
  background-color: transparent !important;
}

/* Custom background clearing for client icons */
.client-icon {
  background: transparent !important;
  box-shadow: none !important;
}

/* Target the Radix UI tooltip portal directly */
[data-radix-popper-content-wrapper] {
  opacity: 1 !important;
}

[data-radix-popper-content-wrapper] > [role="tooltip"],
[data-radix-popper-content-wrapper] > div {
  background: white !important;
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
  background-color: white !important;
  background-image: none !important;
  opacity: 1 !important;
  --tw-bg-opacity: 1 !important;
}

/* Force tooltips to have solid white background - override any transparency */
.radix-tooltip-content-override,
[data-radix-tooltip-content-wrapper] > div,
div[role="tooltip"],
.TooltipContent,
.tooltip-content {
  background-color: white !important;
  background: white !important;
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
  opacity: 1 !important;
}

/* Override parent wrappers that might have transparency */
[data-radix-tooltip-content-wrapper],
[data-radix-popper-content-wrapper] {
  opacity: 1 !important;
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
  background: transparent !important;
}

/* Ensure tooltip poppers have no transparency */
.Tooltip-root,
.TooltipContent::before,
.TooltipContent::after,
div[role="tooltip"]::before,
div[role="tooltip"]::after {
  background: white !important;
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
  opacity: 1 !important;
}

/* Enhanced Tooltip content styling - Make stronger and more visible */
.TooltipContent,
[data-radix-tooltip-content],
div[role="tooltip"],
.tooltip-content {
  background-color: white !important;
  color: black !important;
  border-radius: 6px !important;
  padding: 10px !important;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2) !important;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif !important;
  font-size: 0.875rem !important;
  line-height: 1.5 !important;
  z-index: 9999 !important;
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  max-width: 320px !important;
  opacity: 1 !important;
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
}

/* Make sure tooltip text is bold and clear */
.TooltipContent p,
[data-radix-tooltip-content] p,
div[role="tooltip"] p,
.tooltip-content p {
  font-weight: 500 !important;
  color: black !important;
  font-size: 0.875rem !important;
}

/* Ensure the tooltip container has no transparency */
div[data-radix-popper-content-wrapper] {
  opacity: 1 !important;
  backdrop-filter: none !important;
  -webkit-backdrop-filter: none !important;
  background-color: transparent !important;
}

/* Force tooltip to use solid white background */
.Tooltip-content,
.tooltip-content {
  background-color: white !important;
  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.2) !important;
  border: 1px solid rgba(0, 0, 0, 0.1) !important;
  opacity: 1 !important;
}