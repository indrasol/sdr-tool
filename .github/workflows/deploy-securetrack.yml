name: Build & Deploy ‚Äì securetrack01

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  APP_NAME: securetrack01
  RESOURCE_GROUP: RG-EU-STB-PRD-01
  PYTHON_VERSION: "3.11"
  APP_URL: https://securetrack01-e5g4endda5aebxcx.eastus-01.azurewebsites.net

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - uses: actions/checkout@v4

      # 2. (Optional) lint / unit‚Äëtest here ‚Ä¶

      # 3. Zip ONLY source + requirements
      - name: Create deployment bundle
        run: |
          zip -r site.zip sdr_backend requirements.txt \
              -x "**/__pycache__/*" ".git/*"

      - uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: site.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    concurrency:
      group: deploy-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: build-output

      # Login with OIDC
      - uses: azure/login@v2
        with:
          client-id:  ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id:  ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

     # ‚îÄ‚îÄ‚îÄ 1Ô∏è‚É£¬†Stop the web app (releases locks) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      # - name: Stop App Service
      #   run: |
      #     az webapp stop \
      #       --name ${{ env.APP_NAME }} \
      #       --resource-group ${{ env.RESOURCE_GROUP }}

      # ‚îÄ‚îÄ‚îÄ 2Ô∏è‚É£¬†Clean wwwroot via Kudu API (region‚Äëaware) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      # - name: Clean wwwroot (Kudu DELETE)
      #   env:
      #     APP_NAME:       ${{ env.APP_NAME }}
      #     RESOURCE_GROUP: ${{ env.RESOURCE_GROUP }}
      #   run: |
      #     # Fetch publishing profile XML
      #     PROFILE=$(az webapp deployment list-publishing-profiles \
      #               --name "$APP_NAME" \
      #               --resource-group "$RESOURCE_GROUP" --xml)
      
      #     # Extract creds & the full publishUrl (e.g. securetrack‚Äëfwcjcdffbug2g9fc.scm.eastus-01.azurewebsites.net:443)
      #     KUDU_USER=$(echo "$PROFILE" | grep -oP '(?<=userName=")[^"]+' | head -1)
      #     KUDU_PASS=$(echo "$PROFILE" | grep -oP '(?<=userPWD=")[^"]+'  | head -1)
      #     PUBLISH_URL=$(echo "$PROFILE" | grep -oP '(?<=publishUrl=")[^"]+' | head -1)
      
      #     # Mask secrets
      #     echo "::add-mask::$KUDU_USER"
      #     echo "::add-mask::$KUDU_PASS"
      
      #     # Strip port if present and build base URL
      #     KUDU_HOST=${PUBLISH_URL%%:*}                    # everything before the first colon
      #     KUDU_URL="https://${KUDU_HOST}/api/vfs/site/wwwroot/"
      
      #     echo "üßπ Deleting existing files at $KUDU_URL"
      #     curl -sS -u "$KUDU_USER:$KUDU_PASS" -X DELETE "$KUDU_URL" -H "If-Match: *"

      # ‚îÄ‚îÄ‚îÄ 3Ô∏è‚É£¬†Deploy package ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      - uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.APP_NAME }}
          package: site.zip
          # keep `clean: true` ‚Äì harmless after our manual wipe
          clean: true
        timeout-minutes: 15

      # ‚îÄ‚îÄ‚îÄ 4Ô∏è‚É£¬†Restart & smoke‚Äëtest ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
      # - name: Start App Service
      #   run: |
      #     az webapp start \
      #       --name ${{ env.APP_NAME }} \
      #       --resource-group ${{ env.RESOURCE_GROUP }}
            
      # ‚ù∏ Smoke test
      - name: Verify app is up
        run: |
          for i in {1..5}; do
            curl -fsSL "${{ env.APP_URL }}" && exit 0
            echo "Waiting for app‚Ä¶ ($i/5)"; sleep 30
          done
          echo "App did not start!" && exit 1

