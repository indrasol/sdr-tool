name: Build & Deploy container to securetrack1
on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ACR_NAME: securetrack                  # <── registry name (no .azurecr.io)
  IMAGE_NAME: securetrack/sdr-backend    # <── repo name inside ACR
  RESOURCE_GROUP: RG-EU-STB-PRD-01
  APP_NAME: securetrack1

permissions:
  contents: read
  id-token: write            # OIDC

jobs:
# ── Build & push image ──────────────────────────────────────────────────────
  build-push:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - uses: azure/login@v2
      with:
        client-id:      ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
        tenant-id:      ${{ secrets.AZUREAPPSERVICE_TENANTID }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

    - name: ACR login
      run: az acr login -n $ACR_NAME

    - name: Build & push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          ${{ env.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:latest

# ── Update web‑app to pull the new tag ──────────────────────────────────────
  deploy:
    needs: build-push
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v2
      with:
        client-id:      ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
        tenant-id:      ${{ secrets.AZUREAPPSERVICE_TENANTID }}
        subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

    - name: Point web‑app to :latest image
      run: |
        az webapp config container set \
          --name $APP_NAME \
          --resource-group $RESOURCE_GROUP \
          --docker-custom-image-name $ACR_NAME.azurecr.io/${IMAGE_NAME}:latest \
          --docker-registry-server-url https://$ACR_NAME.azurecr.io \
          --docker-registry-server-user securetrack \
          --docker-registry-server-password ${{ secrets.ACR_ADMIN_PASSWORD }}

    - name: Warm‑up check
      run: |
        for i in {1..10}; do
          if curl -fsSL "https://${{ env.APP_NAME }}.azurewebsites.net/docs" -o /dev/null; then
            echo "✅ App is live"; exit 0; fi
          sleep 15
        done
        echo "❌ App did not start in time"; exit 1
